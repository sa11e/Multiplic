{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/numkey.jsx","components/counters.jsx","components/numpad.jsx","components/question.jsx","components/resultBoard.jsx","components/timer.jsx","components/startButton.jsx","components/image.jsx","components/selectAnswerButtons.jsx","components/toogleAnswerMode.jsx","components/selectMultiTable.jsx","constants.js","components/selectAdditionSubstraction.jsx","components/settingsPanel.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","react_default","a","createElement","className","href","this","props","bestResultTimeText","Component","Counter","_this","getBadgeClasses","formatCount","onClick","onIncrement","counter","onDelete","id","classes","value","NumKey","_this2","keyvalue","NumPad","numkey","key","numkeyClicked","clearClicked","okClicked","answerField","Question","style","fontSize","questionText","ResultBoard","correctAnswers","total","resultTextClasses","resultText","Timer","timer","StartButton","buttonText","timerText","Image","getRandomText","texts","Math","floor","random","length","display","imageShouldHide","src","imageFullPath","SelectAnswerButtons","choices","answerbuttonClicked","ToogleAnswerMode","onChange","event","onAnswerModeChanged","target","type","name","defaultChecked","choooseAnswerChecked","SelectMultiTable","multiButtons","forEach","element","push","updateSelectedMultiTable","renderButtons","ArithmeticChoice","Multi1To10","Addition1To10","Addition1To100","Subtraction1To10","Subtraction1To100","SelectAdditionSubstraction","buttons","SettingsPanel","onSettingsPanelClicked","currentSettingsText","float","settingsShouldHide","toogleAnswerMode","selectMultiTable","newTable","selectAdditionSubstraction","App","answered","totalQuestions","window","location","includes","selectedMultitable","question","answer","startTime","timerHandle","resultTime","bestResultTime","startButtonText","isGameStarted","webcamShouldHide","answerMode","hideNumPad","hideSelectButtons","modalShow","caputuredImage","timeToGetReward","rewardText","modalClose","setState","getCurrentSettingsText","createNextQuestion","createAdditionQuestion","createSubtractionQuestion","createMultiplicationQuestion","getRandomNumer","getFixedAnswers","min","max","term1","term2","correctAnswer","fixedAnswers","i","numberOfAnswers","isMultiplicationSelected","getRandomMultiplicationAnswer","getRandomAddOrSubAnswer","excludeList","randomAnswer","handleClearClicked","handleAnswerbuttonClicked","handleOkClicked","endGame","stopGame","newRewardText","getRewardText","getTimerText","Date","getDate","getHours","handleStartButtonClicked","startGame","capture","timerHandler","setInterval","tick","settingsPanelClicked","currentValue","clearInterval","setResultTime","date1","milliseconds","getTime","console","log","mins","seconds","round","numkeyOnClickHandler","setAnswerMode","mode","setRef","webcam","imageSrc","getScreenshot","Fragment","navbar","settingsPanel","startButton","resultBoard","selectAnswerButtons","numpad","react_webcam_default","audio","height","ref","screenshotFormat","width","videoConstraints","facingMode","components_image","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.968d3395.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass NavBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Bäst tid hittills:{\" \"}\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n            {this.props.bestResultTimeText}\r\n          </span>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  render() {\r\n    // console.log(\"props\", this.props);\r\n    return (\r\n      <div>\r\n        {/* <img src={this.state.imageUrl} alt=\"bla\" /> */}\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className={\"btn btn-secondary btn-sm\"}\r\n        >\r\n          Increment\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n\r\n        {/* <ul>\r\n          {this.state.tags.map(tag => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value == 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    // const { count } = this.state.count;\r\n    return this.props.counter.value === 0 ? \"Zero\" : this.props.counter.value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NumKey extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={() => this.props.onClick(this.props.keyvalue)}\r\n        className=\"btn btn-secondary btn-l m-2\"\r\n      >\r\n        {this.props.keyvalue}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumKey;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    const { onReset, onDelete, onIncrement } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n\r\n        {this.props.counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={onDelete}\r\n            onIncrement={onIncrement}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\nimport NumKey from \"./numkey\";\r\n\r\nclass NumPad extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <NumKey\r\n            key={1}\r\n            keyvalue={1}\r\n            onClick={() => this.props.numkeyClicked(1)}\r\n          />\r\n          <NumKey\r\n            key={2}\r\n            keyvalue={2}\r\n            onClick={() => this.props.numkeyClicked(2)}\r\n          />\r\n          <NumKey\r\n            key={3}\r\n            keyvalue={3}\r\n            onClick={() => this.props.numkeyClicked(3)}\r\n          />\r\n          <NumKey\r\n            key={98}\r\n            keyvalue={\"Clear\"}\r\n            onClick={() => this.props.clearClicked()}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <NumKey\r\n            key={4}\r\n            keyvalue={4}\r\n            onClick={() => this.props.numkeyClicked(4)}\r\n          />\r\n          <NumKey\r\n            key={5}\r\n            keyvalue={5}\r\n            onClick={() => this.props.numkeyClicked(5)}\r\n          />\r\n          <NumKey\r\n            key={6}\r\n            keyvalue={6}\r\n            onClick={() => this.props.numkeyClicked(6)}\r\n          />\r\n          <NumKey\r\n            key={99}\r\n            keyvalue={\"OK\"}\r\n            onClick={() => this.props.okClicked(this.props.answerField)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <NumKey\r\n            key={7}\r\n            keyvalue={7}\r\n            onClick={() => this.props.numkeyClicked(7)}\r\n          />\r\n          <NumKey\r\n            key={8}\r\n            keyvalue={8}\r\n            onClick={() => this.props.numkeyClicked(8)}\r\n          />\r\n          <NumKey\r\n            key={9}\r\n            keyvalue={9}\r\n            onClick={() => this.props.numkeyClicked(9)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <NumKey\r\n            key={0}\r\n            keyvalue={0}\r\n            onClick={() => this.props.numkeyClicked(0)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumPad;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Question extends Component {\r\n  state = {};\r\n  render() {\r\n    const style = {\r\n      fontSize: \"xx-large\"\r\n    };\r\n    return (\r\n      <div style={style}>\r\n        <span className=\"mr-2\">\r\n          <b>Fråga:</b>\r\n        </span>\r\n        <span>{this.props.questionText} </span>\r\n        <span>\r\n          <b>{this.props.answerField}</b>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ResultBoard extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"well\">\r\n        <span className=\"badge badge-pill badge-secondary mr-2\">\r\n          {this.props.correctAnswers} / {this.props.total}\r\n        </span>\r\n        <span className={\"badge \" + this.props.resultTextClasses}>\r\n          {this.props.resultText}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultBoard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Timer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>{this.props.timer}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\nclass StartButton extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-secondary btn-l m-2\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          {this.props.buttonText}\r\n        </button>\r\n        <span>{\"Tid: \" + this.props.timerText}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartButton;\r\n","import React, { Component } from \"react\";\r\nclass Image extends Component {\r\n  state = {};\r\n\r\n  getRandomText = () => {\r\n    // Get all images in the images folder\r\n    var texts = [\r\n      \"Snygg bild!\",\r\n      \"Vilket leende!\",\r\n      \"Kamma dig\",\r\n      \"När var du hos frisören senast?\",\r\n      \"Du är snyggare än din katt\"\r\n    ];\r\n    // Get random number between 0 and number of images\r\n    var randomIndex = Math.floor(Math.random() * texts.length);\r\n    var randomText = texts[randomIndex];\r\n    return randomText;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <img src={ require('./images/image1.jpg') } />\r\n      <div\r\n        style={{\r\n          display: this.props.imageShouldHide ? \"none\" : \"block\"\r\n        }}\r\n      >\r\n        <img\r\n          // className={this.props.imageShouldHide ? \"hidden\" : \"\"}\r\n          src={this.props.imageFullPath}\r\n        />\r\n        <div>\r\n          <label>{this.getRandomText()}</label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import React, { Component } from \"react\";\r\nimport NumKey from \"./numkey\";\r\n\r\nclass SelectAnswerButtons extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NumKey\r\n          key={this.props.choices[0]}\r\n          keyvalue={this.props.choices[0]}\r\n          onClick={() => this.props.answerbuttonClicked(this.props.choices[0])}\r\n        />\r\n        <NumKey\r\n          key={this.props.choices[1]}\r\n          keyvalue={this.props.choices[1]}\r\n          onClick={() => this.props.answerbuttonClicked(this.props.choices[1])}\r\n        />\r\n        <NumKey\r\n          key={this.props.choices[2]}\r\n          keyvalue={this.props.choices[2]}\r\n          onClick={() => this.props.answerbuttonClicked(this.props.choices[2])}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectAnswerButtons;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ToogleAnswerMode extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        // onChange={event => this.props.onAnswerModeChanged(event.target.value)}\r\n        onChange={event => this.props.onAnswerModeChanged(event.target.value)}\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          value=\"numpad\"\r\n          name=\"toogleAnswerMode\"\r\n          defaultChecked={!this.props.choooseAnswerChecked}\r\n        />{\" \"}\r\n        1-9\r\n        <input\r\n          type=\"radio\"\r\n          value=\"choose_answer\"\r\n          name=\"toogleAnswerMode\"\r\n          defaultChecked={this.props.choooseAnswerChecked}\r\n        />{\" \"}\r\n        Välj rätt svar\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToogleAnswerMode;\r\n","import React, { Component } from \"react\";\r\nimport NumKey from \"./numkey\";\r\n\r\nclass SelectMultiTable extends Component {\r\n  state = {};\r\n\r\n  renderButtons() {\r\n    var multiplicationTables = [2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    var multiButtons = [];\r\n    multiplicationTables.forEach(element => {\r\n      multiButtons.push(\r\n        <NumKey\r\n          key={element}\r\n          keyvalue={element}\r\n          onClick={() => this.props.updateSelectedMultiTable(element)}\r\n        />\r\n      );\r\n    });\r\n\r\n    return multiButtons;\r\n  }\r\n\r\n  render() {\r\n    return this.renderButtons();\r\n  }\r\n}\r\n\r\nexport default SelectMultiTable;\r\n","export const ArithmeticChoice = {\r\n  Multi1To10: \"Multi1To10\",\r\n  Addition1To10: \"Addition1To10\",\r\n  Addition1To100: \"Addition1To100\",\r\n  Subtraction1To10: \"Subtraction1To10\",\r\n  Subtraction1To100: \"Subtraction1To100\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport NumKey from \"./numkey\";\r\nimport { ArithmeticChoice } from \"../constants.js\";\r\n\r\nclass SelectAdditionSubstraction extends Component {\r\n  state = {};\r\n\r\n  renderButtons() {\r\n    var buttons = [];\r\n    buttons.push(\r\n      <NumKey\r\n        keyvalue={\"Addition 1-10\"}\r\n        key={110}\r\n        onClick={() => this.props.updateSelectedMultiTable(ArithmeticChoice.Addition1To10)}\r\n      />\r\n    );\r\n\r\n    buttons.push(\r\n      <NumKey\r\n        keyvalue={\"Addition 1-100\"}\r\n        key={111}\r\n        onClick={() => this.props.updateSelectedMultiTable(ArithmeticChoice.Addition1To100)}\r\n      />\r\n    );\r\n\r\n    buttons.push(\r\n      <NumKey\r\n        keyvalue={\"Subtraktion 1-10\"}\r\n        key={112}\r\n        onClick={() => this.props.updateSelectedMultiTable(ArithmeticChoice.Subtraction1To10)}\r\n      />\r\n    );\r\n\r\n    buttons.push(\r\n      <NumKey\r\n        keyvalue={\"Subtraktion 1-100\"}\r\n        key={113}\r\n        onClick={() => this.props.updateSelectedMultiTable(ArithmeticChoice.Subtraction1To100)}\r\n      />\r\n    );\r\n\r\n    return buttons;\r\n  }\r\n\r\n  render() {\r\n    return this.renderButtons();\r\n  }\r\n}\r\n\r\nexport default SelectAdditionSubstraction;\r\n","import React, { Component } from \"react\";\r\nimport ToogleAnswerMode from \"./toogleAnswerMode\";\r\nimport SelectMultiTable from \"./selectMultiTable\";\r\nimport SelectAdditionSubstraction from \"./selectAdditionSubstraction\";\r\n\r\nclass SettingsPanel extends Component {\r\n  state = {};\r\n  render() {\r\n    // const { setAnswerMode } = this.props;\r\n\r\n    return (\r\n      <div onClick={event => this.props.onSettingsPanelClicked(event.target.value)}>\r\n        <span className=\"mr-3\">\r\n          <b>Träna matte - {this.props.currentSettingsText}</b>\r\n        </span>\r\n        <div style={{ float: \"right\" }}>Inställningar {this.props.settingsShouldHide ? \"▼\" : \"▲\"}</div>\r\n        <hr />\r\n        <div className=\"settings\" style={{ display: this.props.settingsShouldHide ? \"none\" : \"block\" }}>\r\n          Visa nummerplatta eller bara tre knapppar:\r\n          <ToogleAnswerMode\r\n            onAnswerModeChanged={this.props.onAnswerModeChanged}\r\n            choooseAnswerChecked={this.props.choooseAnswerChecked}\r\n            // choooseAnswerChecked={this.state.answerMode != \"numpad\"}\r\n          />\r\n          <hr />\r\n          Välj multiplikationstabell:\r\n          <br></br>\r\n          <SelectMultiTable updateSelectedMultiTable={newTable => this.props.updateSelectedMultiTable(newTable)} />\r\n          <br></br>\r\n          Addition eller Subtraktion:\r\n          <br></br>\r\n          <SelectAdditionSubstraction\r\n            updateSelectedMultiTable={newTable => this.props.updateSelectedMultiTable(newTable)}\r\n          />\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsPanel;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport \"./App.css\";\r\nimport Counters from \"./components/counters\";\r\nimport NumPad from \"./components/numpad\";\r\nimport Question from \"./components/question\";\r\nimport ResultBoard from \"./components/resultBoard\";\r\nimport Timer from \"./components/timer\";\r\nimport StartButton from \"./components/startButton\";\r\nimport Image from \"./components/image\";\r\nimport SelectAnswerButtons from \"./components/selectAnswerButtons\";\r\nimport SettingsPanel from \"./components/settingsPanel\";\r\nimport WebCam from \"react-webcam\";\r\nimport { ArithmeticChoice } from \"./constants.js\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    correctAnswers: 0,\r\n    answered: 0,\r\n    totalQuestions: window.location.href.includes(\"localhost\") ? 3 : 10,\r\n    selectedMultitable: 5,\r\n    question: { questionText: \"\", answer: 0 },\r\n    resultText: \"\",\r\n    resultTextClasses: \"\",\r\n    answerField: \"\",\r\n    timerText: \"\",\r\n    startTime: \"\",\r\n    timerHandle: \"\",\r\n    resultTime: 0,\r\n    bestResultTime: 0,\r\n    bestResultTimeText: \"\",\r\n    startButtonText: \"Starta\",\r\n    isGameStarted: false,\r\n\r\n    //settings\r\n    settingsShouldHide: true,\r\n    currentSettingsText: \"Multiplikationstabell 5\",\r\n\r\n    // image\r\n    // imageFullPath: \"\",\r\n    imageShouldHide: true,\r\n    webcamShouldHide: false,\r\n\r\n    // Answer mode\r\n    answerMode: \"numpad\",\r\n    choices: [],\r\n    hideNumPad: false,\r\n    hideSelectButtons: true,\r\n\r\n    modalShow: false,\r\n\r\n    // Captured image\r\n    caputuredImage: \"\",\r\n\r\n    // Reward feature\r\n    timeToGetReward: 25000,\r\n    rewardText: \"\"\r\n  };\r\n\r\n  modalClose = () => this.setState({ modalShow: false });\r\n\r\n  updateSelectedMultiTable = newTable => {\r\n    this.setState({ selectedMultitable: newTable });\r\n    this.setState({ currentSettingsText: this.getCurrentSettingsText(newTable) });\r\n  };\r\n\r\n  getCurrentSettingsText = newTable => {\r\n    if (newTable === ArithmeticChoice.Addition1To10) {\r\n      // Addition 1-10\r\n      return \"Addition 1 till 10\";\r\n    } else if (newTable === ArithmeticChoice.Addition1To100) {\r\n      // Addition 1-100\r\n      return \"Addition 1 till 100\";\r\n    } else if (newTable === ArithmeticChoice.Subtraction1To10) {\r\n      // Subtraction 1-10\r\n      return \"Subtraktion 1 till 10\";\r\n    } else if (newTable === ArithmeticChoice.Subtraction1To100) {\r\n      // Subtraction 1-100\r\n      return \"Subtraktion 1 till 100\";\r\n    } else {\r\n      // Multiplication\r\n      return \"Multiplikationstabell \" + newTable;\r\n    }\r\n  };\r\n\r\n  createNextQuestion = () => {\r\n    if (this.state.selectedMultitable === ArithmeticChoice.Addition1To10) {\r\n      // Addition 1-10\r\n      this.createAdditionQuestion(1, 10);\r\n    } else if (this.state.selectedMultitable === ArithmeticChoice.Addition1To100) {\r\n      // Addition 1-100\r\n      this.createAdditionQuestion(1, 100);\r\n    } else if (this.state.selectedMultitable === ArithmeticChoice.Subtraction1To10) {\r\n      // Subtraction 1-10\r\n      this.createSubtractionQuestion(1, 10);\r\n    } else if (this.state.selectedMultitable === ArithmeticChoice.Subtraction1To100) {\r\n      // Subtraction 1-100\r\n      this.createSubtractionQuestion(1, 100);\r\n    } else {\r\n      // Multiplication\r\n      this.createMultiplicationQuestion();\r\n    }\r\n  };\r\n\r\n  createMultiplicationQuestion = () => {\r\n    var random = this.getRandomNumer(10, 0);\r\n    var question = {\r\n      questionText: this.state.selectedMultitable + \" * \" + random + \" = \",\r\n      answer: this.state.selectedMultitable * random\r\n    };\r\n    this.setState({ question, choices: this.getFixedAnswers(question.answer) });\r\n  };\r\n\r\n  createAdditionQuestion = (min, max) => {\r\n    var term1 = this.getRandomNumer(max, min);\r\n    var term2 = this.getRandomNumer(max - term1, 0);\r\n    var question = {\r\n      questionText: term1 + \" + \" + term2 + \" = \",\r\n      answer: term1 + term2\r\n    };\r\n    this.setState({ question, choices: this.getFixedAnswers(question.answer) });\r\n  };\r\n\r\n  createSubtractionQuestion = (min, max) => {\r\n    var term1 = this.getRandomNumer(max, min);\r\n    var term2 = this.getRandomNumer(term1, 0);\r\n    var question = {\r\n      questionText: term1 + \" - \" + term2 + \" = \",\r\n      answer: term1 - term2\r\n    };\r\n    this.setState({ question, choices: [] });\r\n  };\r\n\r\n  getRandomNumer = (max, min) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  getFixedAnswers = correctAnswer => {\r\n    var fixedAnswers = [];\r\n    var numberOfAnswers = 3;\r\n    for (var i = 0; i < numberOfAnswers; i++) {\r\n      var correctAnswerIsAdded = fixedAnswers.includes(correctAnswer);\r\n      if (!correctAnswerIsAdded && (i == numberOfAnswers - 1 || Math.random() < 1 / numberOfAnswers)) {\r\n        // Add correct number\r\n        fixedAnswers[i] = correctAnswer;\r\n        continue;\r\n      }\r\n\r\n      // Add a random numner, possible correct answer\r\n      if (this.isMultiplicationSelected() == true) {\r\n        fixedAnswers[i] = this.getRandomMultiplicationAnswer(fixedAnswers);\r\n      } else {\r\n        fixedAnswers[i] = this.getRandomAddOrSubAnswer(fixedAnswers);\r\n      }\r\n    }\r\n    return fixedAnswers;\r\n  };\r\n\r\n  isMultiplicationSelected = () => {\r\n    if (this.state.selectedMultitable < 100) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  getRandomMultiplicationAnswer = excludeList => {\r\n    while (true) {\r\n      var random = Math.floor(Math.random() * 10 + 1);\r\n      var randomAnswer = this.state.selectedMultitable * random;\r\n      if (!excludeList.includes(randomAnswer)) return randomAnswer;\r\n    }\r\n  };\r\n\r\n  getRandomAddOrSubAnswer = excludeList => {\r\n    while (true) {\r\n      var randomAnswer = this.getRandomNumer(10, 0);\r\n\r\n      if (\r\n        this.state.selectedMultitable === ArithmeticChoice.Addition1To100 ||\r\n        this.state.selectedMultitable === ArithmeticChoice.Subtraction1To100\r\n      ) {\r\n        randomAnswer = this.getRandomNumer(10, 0);\r\n      }\r\n\r\n      if (!excludeList.includes(randomAnswer)) return randomAnswer;\r\n    }\r\n  };\r\n\r\n  handleClearClicked = () => {\r\n    this.setState({ answerField: \"\" });\r\n  };\r\n\r\n  handleAnswerbuttonClicked = answer => {\r\n    this.handleOkClicked(answer);\r\n  };\r\n\r\n  handleOkClicked = answer => {\r\n    if (this.state.isGameStarted == false) {\r\n      return;\r\n    }\r\n\r\n    // Check input against answer.\r\n    // If correct, increase correctAnswers and show new question.\r\n    // Otherwise, show an error\r\n    if (answer == this.state.question.answer) {\r\n      // Correct answer\r\n      this.setState({\r\n        correctAnswers: ++this.state.correctAnswers,\r\n        answered: ++this.state.answered,\r\n        resultText: \"Rätt!\",\r\n        resultTextClasses: \"bg-success\"\r\n      });\r\n\r\n      if (this.state.correctAnswers === this.state.totalQuestions) {\r\n        // User has answered alla questsions. End the game\r\n        this.endGame();\r\n      } else {\r\n        // More questions to answer. Display next one\r\n        this.createNextQuestion();\r\n      }\r\n    } else {\r\n      // Wrong answer\r\n      this.setState({\r\n        resultText: \"Fel!\",\r\n        resultTextClasses: \"bg-danger\",\r\n        choices: this.getFixedAnswers(this.state.question.answer)\r\n      });\r\n    }\r\n\r\n    this.setState({ answerField: \"\" });\r\n  };\r\n\r\n  endGame = () => {\r\n    // Stop timer and calculate result time\r\n    this.stopGame();\r\n\r\n    var newRewardText = \"\";\r\n    if (this.state.resultTime < this.state.timeToGetReward) {\r\n      newRewardText = this.getRewardText();\r\n    }\r\n\r\n    // Update the state\r\n    this.setState({\r\n      resultText: \"Klar! Tid: \" + this.getTimerText(this.state.resultTime),\r\n      imageShouldHide: false,\r\n      rewardText: newRewardText\r\n    });\r\n  };\r\n\r\n  getRewardText = () => {\r\n    return \"Hemliga koden: \" + (2010 + new Date().getDate() + new Date().getHours());\r\n  };\r\n\r\n  handleStartButtonClicked = () => {\r\n    // Toggle the button\r\n    if (this.state.isGameStarted) {\r\n      // Stop the game and the timer\r\n      this.stopGame();\r\n    } else {\r\n      // Start the game and the timer\r\n      this.startGame();\r\n    }\r\n  };\r\n\r\n  startGame = () => {\r\n    this.createNextQuestion();\r\n    this.capture();\r\n    this.setState({\r\n      correctAnswers: 0,\r\n      startButtonText: \"Stop\",\r\n      resultText: \"\",\r\n      isGameStarted: true,\r\n      startTime: new Date(),\r\n      timerHandler: setInterval(this.tick, 33),\r\n      imageShouldHide: true,\r\n      webcamShouldHide: true,\r\n      rewardText: \"\"\r\n    });\r\n  };\r\n\r\n  settingsPanelClicked = () => {\r\n    var currentValue = this.state.settingsShouldHide;\r\n    this.setState({ settingsShouldHide: !currentValue });\r\n  };\r\n\r\n  stopGame = () => {\r\n    clearInterval(this.state.timerHandler);\r\n    this.setResultTime();\r\n    if (this.state.resultTime < this.state.bestResultTime || this.state.bestResultTime === 0) {\r\n      // New record!\r\n      this.setState({\r\n        bestResultTime: this.state.resultTime,\r\n        bestResultTimeText: this.getTimerText(this.state.resultTime)\r\n      });\r\n    }\r\n\r\n    var question = {\r\n      questionText: \"\",\r\n      answer: -1\r\n    };\r\n\r\n    this.setState({\r\n      startButtonText: \"Start\",\r\n      isGameStarted: false,\r\n      question: question\r\n    });\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.isGameStarted == true) this.setResultTime();\r\n  };\r\n\r\n  setResultTime = () => {\r\n    var date1 = this.state.startTime; //new Date(\"7/Nov/2012 20:30:00\");\r\n    var date2 = new Date();\r\n    var milliseconds = date2.getTime() - date1.getTime();\r\n\r\n    this.setState({\r\n      resultTime: milliseconds,\r\n      timerText: this.getTimerText(milliseconds)\r\n    });\r\n\r\n    console.log(\"ResultTime:\" + milliseconds + \" = \" + this.getTimerText(milliseconds));\r\n  };\r\n\r\n  getTimerText = milliseconds => {\r\n    var days = Math.floor(milliseconds / (1000 * 60 * 60 * 24));\r\n    milliseconds -= days * (1000 * 60 * 60 * 24);\r\n\r\n    var hours = Math.floor(milliseconds / (1000 * 60 * 60));\r\n    milliseconds -= hours * (1000 * 60 * 60);\r\n\r\n    var mins = Math.floor(milliseconds / (1000 * 60));\r\n    milliseconds -= mins * (1000 * 60);\r\n\r\n    var seconds = Math.floor(milliseconds / 1000);\r\n    milliseconds -= seconds * 1000;\r\n\r\n    return mins + \" min \" + seconds + \",\" + Math.round(milliseconds / 100) + \" sek\";\r\n  };\r\n\r\n  numkeyOnClickHandler = numkey => {\r\n    if (this.state.isGameStarted == false) return;\r\n\r\n    var answerField = \"\";\r\n    if (numkey < 10) {\r\n      answerField = this.state.answerField + numkey;\r\n    }\r\n    this.setState({ answerField, resultText: \"\" });\r\n  };\r\n\r\n  setAnswerMode = mode => {\r\n    var hideNumPad = false;\r\n    var hideSelectButtons = false;\r\n    if (mode == \"numpad\") {\r\n      hideNumPad = false;\r\n      hideSelectButtons = true;\r\n    } else {\r\n      hideNumPad = true;\r\n      hideSelectButtons = false;\r\n    }\r\n\r\n    this.setState({\r\n      answerMode: mode,\r\n      hideNumPad: hideNumPad,\r\n      hideSelectButtons: hideSelectButtons\r\n    });\r\n  };\r\n\r\n  setRef = webcam => {\r\n    this.webcam = webcam;\r\n  };\r\n\r\n  capture = () => {\r\n    const imageSrc = this.webcam.getScreenshot();\r\n    this.setState({\r\n      caputuredImage: imageSrc\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const videoConstraints = {\r\n      width: 1280,\r\n      height: 720,\r\n      facingMode: \"user\"\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar bestResultTimeText={this.state.bestResultTimeText} />\r\n        <main className=\"container\">\r\n          <div>\r\n            <SettingsPanel\r\n              onSettingsPanelClicked={this.settingsPanelClicked}\r\n              settingsShouldHide={this.state.settingsShouldHide}\r\n              currentSettingsText={this.state.currentSettingsText}\r\n              onAnswerModeChanged={this.setAnswerMode}\r\n              choooseAnswerChecked={this.state.answerMode != \"numpad\"}\r\n              updateSelectedMultiTable={this.updateSelectedMultiTable}\r\n            />\r\n            <StartButton\r\n              buttonText={this.state.startButtonText}\r\n              onClick={this.handleStartButtonClicked}\r\n              timerText={this.state.timerText}\r\n            />\r\n\r\n            <Timer>timer={this.state.timer}</Timer>\r\n\r\n            <ResultBoard\r\n              resultTextClasses={this.state.resultTextClasses}\r\n              correctAnswers={this.state.correctAnswers}\r\n              total={this.state.totalQuestions}\r\n              resultText={this.state.resultText}\r\n            />\r\n            <Question questionText={this.state.question.questionText} answerField={this.state.answerField} />\r\n            {!this.state.hideSelectButtons && (\r\n              <SelectAnswerButtons choices={this.state.choices} answerbuttonClicked={this.handleAnswerbuttonClicked} />\r\n            )}\r\n            {!this.state.hideNumPad && (\r\n              <NumPad\r\n                // hide={this.state.hideNumPad}\r\n                okClicked={this.handleOkClicked}\r\n                clearClicked={this.handleClearClicked}\r\n                numkeyClicked={this.numkeyOnClickHandler}\r\n                answerField={this.state.answerField}\r\n              />\r\n            )}\r\n            <div\r\n              style={{\r\n                display: this.state.webcamShouldHide ? \"none\" : \"block\"\r\n              }}\r\n            >\r\n              <WebCam\r\n                audio={false}\r\n                height={350}\r\n                ref={this.setRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={350}\r\n                videoConstraints={videoConstraints}\r\n              />\r\n            </div>\r\n            <Image imageFullPath={this.state.caputuredImage} imageShouldHide={this.state.imageShouldHide} />\r\n\r\n            <h2> {this.state.rewardText}</h2>\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}