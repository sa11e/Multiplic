{"version":3,"sources":["images/inez_staende_mob2.jpg","images/vera_staende_mob 2.jpg","images sync nonrecursive /.(png|jpe?g|svg)$","images sync /^/.*$","images/playground/Inez_staende.JPG","images/playground/Inez_staende_mob.JPG","images/playground/Vera_staende.JPG","images/playground/Vera_staende_mob.JPG","components/navbar.jsx","components/counter.jsx","components/numkey.jsx","components/counters.jsx","components/numpad.jsx","components/question.jsx","components/resultBoard.jsx","components/timer.jsx","components/startButton.jsx","components/image.jsx","components/toogleAnswerMode.jsx","components/selectAnswerButtons.jsx","components/settingsPanel.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./inez_staende_mob2.jpg","./vera_staende_mob 2.jpg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","./playground/Inez_staende.JPG","./playground/Inez_staende_mob.JPG","./playground/Vera_staende.JPG","./playground/Vera_staende_mob.JPG","NavBar","state","react_default","a","createElement","className","href","this","props","bestResultTimeText","Component","Counter","_this","getBadgeClasses","formatCount","onClick","onIncrement","counter","onDelete","classes","value","NumKey","_this2","keyvalue","NumPad","numkey","key","numkeyClicked","clearClicked","okClicked","answerField","Question","style","fontSize","questionText","ResultBoard","correctAnswers","total","resultTextClasses","resultText","Timer","timer","StartButton","buttonText","timerText","Image","imageShouldHide","src","imageFullPath","ToogleAnswerMode","onChange","event","onAnswerModeChanged","target","type","name","defaultChecked","choooseAnswerChecked","SelectAnswerButtons","choices","answerbuttonClicked","SettingsPanel","onSettingsPanelClicked","settingsShouldHide","display","toogleAnswerMode","answerMode","App","counters","answered","totalQuestions","window","location","includes","selectedMultitable","question","answer","startTime","timerHandle","resultTime","bestResultTime","startButtonText","isGameStarted","hideNumPad","hideSelectButtons","modalShow","modalClose","setState","importAll","r","images","item","index","replace","getRandomImage","require","length","randomImage","Math","floor","random","handleDelete","counterId","console","log","filter","c","handleReset","x","handleIncrement","toConsumableArray","indexOf","objectSpread","createNextQuestion","setAnswerMode","getFixedAnswers","correctAnswer","fixedAnswers","i","numberOfAnswers","getRandomAnswer","excludeList","randomAnswer","handleClearClicked","handleAnswerbuttonClicked","handleOkClicked","endGame","stopGame","getTimerText","handleStartButtonClicked","startGame","Date","timerHandler","setInterval","tick","settingsPanelClicked","currentValue","clearInterval","setResultTime","date1","milliseconds","getTime","mins","seconds","round","numkeyOnClickHandler","mode","Fragment","navbar","settingsPanel","startButton","resultBoard","selectAnswerButtons","numpad","hide","components_image","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a71b5101.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/inez_staende_mob2.f4716095.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vera_staende_mob 2.0b1878d1.jpg\";","var map = {\n\t\"./inez_staende_mob2.jpg\": 7,\n\t\"./vera_staende_mob 2.jpg\": 8\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","var map = {\n\t\"./inez_staende_mob2.jpg\": 7,\n\t\"./playground/Inez_staende.JPG\": 24,\n\t\"./playground/Inez_staende_mob.JPG\": 25,\n\t\"./playground/Vera_staende.JPG\": 26,\n\t\"./playground/Vera_staende_mob.JPG\": 27,\n\t\"./vera_staende_mob 2.jpg\": 8\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/Inez_staende.8a6c8598.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Inez_staende_mob.f4716095.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Vera_staende.1f580a6e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Vera_staende_mob.0b1878d1.JPG\";","import React, { Component } from \"react\";\r\nclass NavBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Bäst tid hittills:{\" \"}\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n            {this.props.bestResultTimeText}\r\n          </span>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  render() {\r\n    // console.log(\"props\", this.props);\r\n    return (\r\n      <div>\r\n        {/* <img src={this.state.imageUrl} alt=\"bla\" /> */}\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className={\"btn btn-secondary btn-sm\"}\r\n        >\r\n          Increment\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n\r\n        {/* <ul>\r\n          {this.state.tags.map(tag => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value == 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    // const { count } = this.state.count;\r\n    return this.props.counter.value === 0 ? \"Zero\" : this.props.counter.value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NumKey extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={() => this.props.onClick(this.props.keyvalue)}\r\n        className=\"btn btn-secondary btn-l m-2\"\r\n      >\r\n        {this.props.keyvalue}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumKey;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    const { onReset, onDelete, onIncrement } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n\r\n        {this.props.counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={onDelete}\r\n            onIncrement={onIncrement}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\nimport NumKey from \"./numkey\";\r\n\r\nclass NumPad extends Component {\r\n  state = {};\r\n\r\n  // numkeyOnClickHandler = numkey => {\r\n  //   var inputValue = \"\";\r\n  //   if (numkey < 10) {\r\n  //     inputValue = this.state.inputValue + numkey;\r\n  //   }\r\n\r\n  //   this.setState({ inputValue });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <div>\r\n          <span>\r\n            <b>Svar:</b> {this.state.inputValue}\r\n          </span>\r\n        </div> */}\r\n        <div>\r\n          <NumKey\r\n            key={1}\r\n            keyvalue={1}\r\n            onClick={() => this.props.numkeyClicked(1)}\r\n          />\r\n          <NumKey\r\n            key={2}\r\n            keyvalue={2}\r\n            onClick={() => this.props.numkeyClicked(2)}\r\n          />\r\n          <NumKey\r\n            key={3}\r\n            keyvalue={3}\r\n            onClick={() => this.props.numkeyClicked(3)}\r\n          />\r\n          <NumKey\r\n            key={98}\r\n            keyvalue={\"Clear\"}\r\n            onClick={() => this.props.clearClicked()}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <NumKey\r\n            key={4}\r\n            keyvalue={4}\r\n            onClick={() => this.props.numkeyClicked(4)}\r\n          />\r\n          <NumKey\r\n            key={5}\r\n            keyvalue={5}\r\n            onClick={() => this.props.numkeyClicked(5)}\r\n          />\r\n          <NumKey\r\n            key={6}\r\n            keyvalue={6}\r\n            onClick={() => this.props.numkeyClicked(6)}\r\n          />\r\n          <NumKey\r\n            key={99}\r\n            keyvalue={\"OK\"}\r\n            onClick={() => this.props.okClicked(this.props.answerField)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <NumKey\r\n            key={7}\r\n            keyvalue={7}\r\n            onClick={() => this.props.numkeyClicked(7)}\r\n          />\r\n          <NumKey\r\n            key={8}\r\n            keyvalue={8}\r\n            onClick={() => this.props.numkeyClicked(8)}\r\n          />\r\n          <NumKey\r\n            key={9}\r\n            keyvalue={9}\r\n            onClick={() => this.props.numkeyClicked(9)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <NumKey\r\n            key={0}\r\n            keyvalue={0}\r\n            onClick={() => this.props.numkeyClicked(0)}\r\n          />\r\n        </div>\r\n\r\n        {/* {this.state.numKeys.map(numkey => (\r\n          <NumKey\r\n            key={numkey.id}\r\n            keyvalue={numkey.keyValue}\r\n            onClick={this.numkeyOnClickHandler}\r\n          />\r\n        ))} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumPad;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Question extends Component {\r\n  state = {};\r\n  render() {\r\n    const style = {\r\n      fontSize: \"xx-large\"\r\n    };\r\n    return (\r\n      <div style={style}>\r\n        <span className=\"mr-2\">\r\n          <b>Fråga:</b>\r\n        </span>\r\n        <span>{this.props.questionText} </span>\r\n        <span>\r\n          <b>{this.props.answerField}</b>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ResultBoard extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"well\">\r\n        <span className=\"badge badge-pill badge-secondary mr-2\">\r\n          {this.props.correctAnswers} / {this.props.total}\r\n        </span>\r\n        <span className={\"badge \" + this.props.resultTextClasses}>\r\n          {this.props.resultText}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultBoard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Timer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>{this.props.timer}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\nclass StartButton extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-secondary btn-l m-2\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          {this.props.buttonText}\r\n        </button>\r\n        <span>{\"Tid: \" + this.props.timerText}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartButton;\r\n","import React, { Component } from \"react\";\r\nclass Image extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      // <img src={ require('./images/image1.jpg') } />\r\n      <img\r\n        className={this.props.imageShouldHide ? \"hidden\" : \"\"}\r\n        src={this.props.imageFullPath}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ToogleAnswerMode extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        // onChange={event => this.props.onAnswerModeChanged(event.target.value)}\r\n        onChange={event => this.props.onAnswerModeChanged(event.target.value)}\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          value=\"numpad\"\r\n          name=\"toogleAnswerMode\"\r\n          defaultChecked={!this.props.choooseAnswerChecked}\r\n        />{\" \"}\r\n        1-9\r\n        <input\r\n          type=\"radio\"\r\n          value=\"choose_answer\"\r\n          name=\"toogleAnswerMode\"\r\n          defaultChecked={this.props.choooseAnswerChecked}\r\n        />{\" \"}\r\n        Välj rätt svar\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToogleAnswerMode;\r\n","import React, { Component } from \"react\";\r\nimport NumKey from \"./numkey\";\r\n\r\nclass SelectAnswerButtons extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NumKey\r\n          key={this.props.choices[0]}\r\n          keyvalue={this.props.choices[0]}\r\n          onClick={() => this.props.answerbuttonClicked(this.props.choices[0])}\r\n        />\r\n        <NumKey\r\n          key={this.props.choices[1]}\r\n          keyvalue={this.props.choices[1]}\r\n          onClick={() => this.props.answerbuttonClicked(this.props.choices[1])}\r\n        />\r\n        <NumKey\r\n          key={this.props.choices[2]}\r\n          keyvalue={this.props.choices[2]}\r\n          onClick={() => this.props.answerbuttonClicked(this.props.choices[2])}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectAnswerButtons;\r\n","import React, { Component } from \"react\";\r\nimport ToogleAnswerMode from \"./toogleAnswerMode\";\r\n\r\nclass SettingsPanel extends Component {\r\n  state = {};\r\n  render() {\r\n    // const { setAnswerMode } = this.props;\r\n\r\n    return (\r\n      <div\r\n        onClick={event => this.props.onSettingsPanelClicked(event.target.value)}\r\n      >\r\n        <span className=\"mr-3\">\r\n          <b>Inställningar {this.props.settingsShouldHide ? \"▼\" : \"▲\"}</b>\r\n        </span>\r\n        <div\r\n          style={{ display: this.props.settingsShouldHide ? \"none\" : \"block\" }}\r\n        >\r\n          <ToogleAnswerMode\r\n            onAnswerModeChanged={this.props.onAnswerModeChanged}\r\n            choooseAnswerChecked={this.state.answerMode != \"numpad\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsPanel;\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nimport NumPad from \"./components/numpad\";\nimport Question from \"./components/question\";\nimport ResultBoard from \"./components/resultBoard\";\nimport Timer from \"./components/timer\";\nimport StartButton from \"./components/startButton\";\nimport Image from \"./components/image\";\nimport ToogleAnswerMode from \"./components/toogleAnswerMode\";\nimport SelectAnswerButtons from \"./components/selectAnswerButtons\";\nimport SettingsPanel from \"./components/settingsPanel\";\n// import SuccessModal from \"./components/successModal\";\n\nclass App extends Component {\n  state = {\n    counters: [{ id: 1, value: 4 }, { id: 2, value: 2 }, { id: 3, value: 0 }],\n    correctAnswers: 0,\n    answered: 0,\n    totalQuestions: window.location.href.includes(\"localhost\") ? 3 : 10,\n    selectedMultitable: 5,\n    question: { questionText: \"\", answer: 0 },\n    resultText: \"\",\n    resultTextClasses: \"\",\n    answerField: \"\",\n    timerText: \"\",\n    startTime: \"\",\n    timerHandle: \"\",\n    resultTime: 0,\n    bestResultTime: 0,\n    bestResultTimeText: \"\",\n    startButtonText: \"Starta\",\n    isGameStarted: false,\n\n    //settings\n    settingsShouldHide: true,\n\n    // image\n    imageFullPath: \"\",\n    imageShouldHide: false,\n\n    // Answer mode\n    answerMode: \"\",\n    choices: [],\n    hideNumPad: true,\n    hideSelectButtons: true,\n\n    modalShow: false\n  };\n\n  modalClose = () => this.setState({ modalShow: false });\n\n  importAll = r => {\n    var k = r.keys();\n    let images = {};\n    r.keys().map((item, index) => {\n      images[item.replace(\"./\", \"\")] = r(item);\n    });\n    return images;\n  };\n\n  getRandomImage = () => {\n    // Get all images in the images folder\n    var images = require\n      .context(\"./images\", false, /\\.(png|jpe?g|svg)$/)\n      .keys();\n    var length = images.length;\n\n    // Get random number between 0 and number of images\n    var randomIndex = Math.floor(Math.random() * length);\n    var randomImage = images[randomIndex].replace(\"./\", \"\");\n    var imageFullPath = require(\"./images/\" + randomImage);\n    return imageFullPath;\n  };\n\n  handleDelete = counterId => {\n    console.log(\"delete\" + counterId);\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map(x => {\n      x.value = 0;\n      return;\n    });\n    this.setState({ counters });\n  };\n\n  handleIncrement = counter => {\n    const counters = [...this.state.counters];\n    var index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n    // console.log(this.state.counters[0]);\n    // console.log(counter);\n    // console.log(counters[0]);\n  };\n\n  createNextQuestion = () => {\n    var random = Math.floor(Math.random() * 10 + 1);\n    var question = {\n      questionText: this.state.selectedMultitable + \" * \" + random + \" = \",\n      answer: this.state.selectedMultitable * random\n    };\n\n    this.setAnswerMode(this.answerMode);\n    this.setState({ question, choices: this.getFixedAnswers(question.answer) });\n  };\n\n  getFixedAnswers = correctAnswer => {\n    var fixedAnswers = [];\n    var numberOfAnswers = 3;\n    for (var i = 0; i < numberOfAnswers; i++) {\n      var correctAnswerIsAdded = fixedAnswers.includes(correctAnswer);\n      if (\n        !correctAnswerIsAdded &&\n        (i == numberOfAnswers - 1 || Math.random() < 1 / numberOfAnswers)\n      ) {\n        // Add correct number\n        fixedAnswers[i] = correctAnswer;\n        continue;\n      }\n\n      // Add a random numner, possible correct answer\n      fixedAnswers[i] = this.getRandomAnswer(fixedAnswers);\n    }\n    return fixedAnswers;\n  };\n\n  getRandomAnswer = excludeList => {\n    while (true) {\n      var random = Math.floor(Math.random() * 10 + 1);\n      var randomAnswer = this.state.selectedMultitable * random;\n      if (!excludeList.includes(randomAnswer)) return randomAnswer;\n    }\n  };\n\n  handleClearClicked = () => {\n    this.setState({ answerField: \"\" });\n  };\n\n  handleAnswerbuttonClicked = answer => {\n    this.handleOkClicked(answer);\n  };\n\n  handleOkClicked = answer => {\n    if (this.state.isGameStarted == false) {\n      return;\n    }\n\n    // Check input against answer.\n    // If correct, increase correctAnswers and show new question.\n    // Otherwise, show an error\n    if (answer == this.state.question.answer) {\n      // Correct answer\n      this.setState({\n        correctAnswers: ++this.state.correctAnswers,\n        answered: ++this.state.answered,\n        resultText: \"Rätt!\",\n        resultTextClasses: \"bg-success\"\n      });\n\n      if (this.state.correctAnswers === this.state.totalQuestions) {\n        // User has answered alla questsions. End the game\n        this.endGame();\n      } else {\n        // More questions to answer. Display next one\n        this.createNextQuestion();\n      }\n    } else {\n      // Wrong answer\n      this.setState({\n        resultText: \"Fel!\",\n        resultTextClasses: \"bg-danger\",\n        choices: this.getFixedAnswers(this.state.question.answer)\n      });\n    }\n\n    this.setState({ answerField: \"\" });\n  };\n\n  endGame = () => {\n    // Stop timer and calculate result time\n    this.stopGame();\n\n    // Generate success image\n    // var imageFullPath = require(\"./images/Inez_staende_mob.JPG\");\n    var imageFullPath = this.getRandomImage();\n\n    // Update the state\n    this.setState({\n      resultText: \"Klar! Tid: \" + this.getTimerText(this.state.resultTime),\n      imageFullPath: imageFullPath,\n      imageShouldHide: false\n    });\n  };\n\n  handleStartButtonClicked = () => {\n    // Toggle the button\n    if (this.state.isGameStarted) {\n      // Stop the game and the timer\n      this.stopGame();\n    } else {\n      // Start the game and the timer\n      this.startGame();\n    }\n  };\n\n  startGame = () => {\n    this.createNextQuestion();\n    this.setState({\n      correctAnswers: 0,\n      startButtonText: \"Stop\",\n      resultText: \"\",\n      isGameStarted: true,\n      startTime: new Date(),\n      timerHandler: setInterval(this.tick, 33),\n      imageFullPath: \"\",\n      imageShouldHide: true\n    });\n  };\n\n  settingsPanelClicked = () => {\n    var currentValue = this.state.settingsShouldHide;\n    this.setState({ settingsShouldHide: !currentValue });\n  };\n\n  stopGame = () => {\n    clearInterval(this.state.timerHandler);\n    this.setResultTime();\n    if (\n      this.state.resultTime < this.state.bestResultTime ||\n      this.state.bestResultTime === 0\n    ) {\n      // New record!\n      this.setState({\n        bestResultTime: this.state.resultTime,\n        bestResultTimeText: this.getTimerText(this.state.resultTime)\n      });\n    }\n\n    var question = {\n      questionText: \"\",\n      answer: -1\n    };\n\n    this.setState({\n      startButtonText: \"Start\",\n      isGameStarted: false,\n      question: question\n    });\n  };\n\n  tick = () => {\n    if (this.state.isGameStarted == true) this.setResultTime();\n  };\n\n  setResultTime = () => {\n    var date1 = this.state.startTime; //new Date(\"7/Nov/2012 20:30:00\");\n    var date2 = new Date();\n    var milliseconds = date2.getTime() - date1.getTime();\n\n    this.setState({\n      resultTime: milliseconds,\n      timerText: this.getTimerText(milliseconds)\n    });\n\n    console.log(\n      \"ResultTime:\" + milliseconds + \" = \" + this.getTimerText(milliseconds)\n    );\n  };\n\n  getTimerText = milliseconds => {\n    var days = Math.floor(milliseconds / (1000 * 60 * 60 * 24));\n    milliseconds -= days * (1000 * 60 * 60 * 24);\n\n    var hours = Math.floor(milliseconds / (1000 * 60 * 60));\n    milliseconds -= hours * (1000 * 60 * 60);\n\n    var mins = Math.floor(milliseconds / (1000 * 60));\n    milliseconds -= mins * (1000 * 60);\n\n    var seconds = Math.floor(milliseconds / 1000);\n    milliseconds -= seconds * 1000;\n\n    return (\n      mins + \" min \" + seconds + \",\" + Math.round(milliseconds / 100) + \" sek\"\n    );\n  };\n\n  numkeyOnClickHandler = numkey => {\n    if (this.state.isGameStarted == false) return;\n\n    var answerField = \"\";\n    if (numkey < 10) {\n      answerField = this.state.answerField + numkey;\n    }\n    this.setState({ answerField, resultText: \"\" });\n  };\n\n  setAnswerMode = mode => {\n    // alert(\"\" + mode);\n    var hideNumPad = false;\n    var hideSelectButtons = false;\n    if (mode == \"numpad\") {\n      hideNumPad = false;\n      hideSelectButtons = true;\n    } else {\n      hideNumPad = true;\n      hideSelectButtons = false;\n    }\n\n    this.setState({\n      answerMode: mode,\n      hideNumPad: hideNumPad,\n      hideSelectButtons: hideSelectButtons\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar bestResultTimeText={this.state.bestResultTimeText} />\n        <main className=\"container\">\n          <div>\n            <SettingsPanel\n              onSettingsPanelClicked={this.settingsPanelClicked}\n              settingsShouldHide={this.state.settingsShouldHide}\n              onAnswerModeChanged={this.setAnswerMode}\n              choooseAnswerChecked={this.state.answerMode != \"numpad\"}\n            />\n            {/* <ToogleAnswerMode\n              onAnswerModeChanged={this.setAnswerMode}\n              choooseAnswerChecked={this.state.answerMode != \"numpad\"}\n            /> */}\n            <StartButton\n              buttonText={this.state.startButtonText}\n              onClick={this.handleStartButtonClicked}\n              timerText={this.state.timerText}\n            />\n\n            <Timer>timer={this.state.timer}</Timer>\n\n            <ResultBoard\n              resultTextClasses={this.state.resultTextClasses}\n              correctAnswers={this.state.correctAnswers}\n              total={this.state.totalQuestions}\n              resultText={this.state.resultText}\n            />\n            <Question\n              questionText={this.state.question.questionText}\n              answerField={this.state.answerField}\n            />\n            {!this.state.hideSelectButtons && (\n              <SelectAnswerButtons\n                choices={this.state.choices}\n                answerbuttonClicked={this.handleAnswerbuttonClicked}\n              />\n            )}\n            {!this.state.hideNumPad && (\n              <NumPad\n                hide={this.state.hideNumPad}\n                okClicked={this.handleOkClicked}\n                clearClicked={this.handleClearClicked}\n                numkeyClicked={this.numkeyOnClickHandler}\n                answerField={this.state.answerField}\n              />\n            )}\n            <Image imageFullPath={this.state.imageFullPath} />\n\n            {/* <Button\n              variant=\"primary\"\n              onClick={() => this.setState({ modalShow: true })}\n            >\n              Launch vertically centered modal\n            </Button> */}\n\n            {/* <SuccessModal\n              show={this.state.modalShow}\n              onHide={this.modalClose}\n            /> */}\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}